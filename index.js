
var jade = require('jade')
var runtime = jade.runtime;
var jadenim_compiler = require('./compiler')

module.exports = jade2nim;

function jade2nim(str, options) {
    options = options || {};
    options.compileDebug = false;
    var filename = options.filename;
    //options.compiler = compiler;

    var parser = new jade.Parser(str, filename, options);
    var tokens;
    try {
        tokens = parser.parse()
    } catch (err) {
        parser = parser.context();
        runtime.rethrow(err, parser.filename, parser.lexer.lineno, parser.input);
    }

    var compiler = new jadenim_compiler(tokens, options);
    var nimcode;
    try {
        nimcode = compiler.compile();
    } catch (err) {
        if (err.line && (err.filename || !options.filename)) {
            runtime.rethrow(err, err.filename, err.line, parser.input);
        }
    }

    return "# Generated by jade-nim.js - Do not edit directly\n" +
           "import strutils, macros, jade, jadeface\n" +
           "proc render*(locals: " + options.typename + "): string =\n" +
           "  var jade_buf: seq[string] = @[]\n" +
           "  jade.inject_locals()\n" +
           nimcode +
           "\n  return jade_buf.join()\n";
}
